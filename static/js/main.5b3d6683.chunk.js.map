{"version":3,"sources":["CalculatorButtonGrid/CalculatorButtonGrid.module.scss","Calculator/Calculator.module.scss","CalculatorDisplay/CalculatorDisplay.js","MathOperations.js","CalculatorButtonGrid/CalculatorButtonGrid.js","expression-graph/ExpressionNodeTypes.js","expression-graph/ExpressionNode.js","expression-graph/ExpressionTreeCostructor.js","History.js","expression-graph/MathOperationNodes.js","Calculator/Calculator.js","serviceWorker.js","index.js","CalculatorDisplay/CalculatorDisplay.module.scss"],"names":["module","exports","CalculatorDisplay","props","className","styles","display","value","ADD","Symbol","for","MIN","DIV","MUL","numberList","CalculatorButtonGrid","onNumberPressed","onOperationPressed","onEqualPressed","onDotPressed","onBackPressed","onForwardPressed","onDeletePressed","onResetPressed","addPressed","useCallback","minPressed","mulPressed","divPressed","numberCallbackList","map","number","container","onClick","React","memo","OPERATION","NUMERIC","ExpressionNode","nodeValue","children","isFunction","this","setChildren","parentNode","prototype","resolve","isNumericNode","getNodeType","NodeTypes","isOperationNode","isArray","setParentNode","node","replaceChild","newChild","oldChild","index","indexOf","splice","isMulOrDivNode","mathOperation","MathOperations","isAddOrMinNode","_addNodeAsChildOf","child","parent","console","log","concat","getNodeRoot","getFirstParentWithConditionRoot","root","test","ExpressionTreeCostructor","previousNode","addNode","currentNode","numericNode","previousOperationNode","operationNode","aggiunto","length","gestisciOperationNodeConPrecedenteOperation","previousNumericNode","numericNodeParent","trasversingNode","gestisciOperationNodeConPrecedenteNumeric","getRoot","call","getLastNodeTypeDescriptor","nodeType","mathOperationType","History","size","elementList","add","element","shift","push","insert","undefined","remove","removeLast","lastElementIndex","getIterator","hasPrevious","hasNext","previous","next","first","last","args","reduce","tot","multiplication","min","firstNode","slice","division","AddExpressionNode","MinExpressionNode","MulExpressionNode","DivExpressionNode","Object","create","mathOperationToExpressionNodeMap","Map","set","DEFAULT_DISPLAY_VALUE","Calculator","useState","setDisplay","history","setHistory","currentHistoryIterator","setCurrentHistoryIterator","treeConstructor","setTreeConstructor","isEqualJustPressed","setEqualJustPressed","isShowingHistory","setShowingHistory","isClean","setClean","resetHistoryIterator","isMinusSignTheOnlyCharVisible","handleHistoryExtraction","iterator","savedValue","newTree","createHistoryIterator","num","displayValue","tree","get","Number","computedValue","substr","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5b3d6683.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CalculatorButtonGrid_container__Kb_J_\",\"button\":\"CalculatorButtonGrid_button__NxY14\",\"button--zero\":\"CalculatorButtonGrid_button--zero__23oyu\",\"button--dot\":\"CalculatorButtonGrid_button--dot__3SzZN\",\"button--number\":\"CalculatorButtonGrid_button--number__3jQQR\",\"button--operation\":\"CalculatorButtonGrid_button--operation__2PJG0\",\"button--math-operation\":\"CalculatorButtonGrid_button--math-operation__1pn3S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Calculator_container__1e7NL\"};","import React from \"react\";\nimport styles from \"./CalculatorDisplay.module.scss\"\nfunction CalculatorDisplay (props){\n    return <div className={styles.display}>\n        {props.value}\n    </div>\n}\nexport default CalculatorDisplay","export const ADD = Symbol.for(\"+\")\nexport const MIN = Symbol.for(\"-\")\nexport const DIV = Symbol.for(\"/\")\nexport const MUL = Symbol.for(\"*\")","import React from \"react\";\nimport {useCallback} from \"react\";\nimport {ADD, MIN,MUL, DIV} from \"../MathOperations\"\nimport styles from \"./CalculatorButtonGrid.module.scss\"\n\nconst numberList = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9\n];\n\nfunction CalculatorButtonGrid (props){\n    const {\n        onNumberPressed,\n        onOperationPressed,\n        onEqualPressed,\n        onDotPressed,\n        onBackPressed,\n        onForwardPressed,\n        onDeletePressed,\n        onResetPressed\n    } = props;\n\n    const addPressed = useCallback(() => onOperationPressed(ADD), [onOperationPressed]),\n      minPressed = useCallback(() => onOperationPressed(MIN), [onOperationPressed]),\n      mulPressed = useCallback(() => onOperationPressed(MUL), [onOperationPressed]),\n      divPressed = useCallback(() => onOperationPressed(DIV), [onOperationPressed]);\n\n    const numberCallbackList = numberList.map(function (number) {\n        return ()=>onNumberPressed(number)\n    });\n\n    return <div className={styles.container}>\n        <button className={styles[\"button--operation\"]} onClick={onBackPressed}>&#x27F2;</button>\n        <button className={styles[\"button--operation\"]} onClick={onForwardPressed}>&#x27F3;</button>\n        <button className={styles[\"button--operation\"]} onClick={onDeletePressed}>&#x232B;</button>\n        <button className={styles[\"button--math-operation\"]} onClick={divPressed}>/</button>\n        <button className={styles[\"button--number\"]} onClick={numberCallbackList[1]}>1</button>\n        <button className={styles[\"button--number\"]} onClick={numberCallbackList[2]}>2</button>\n        <button className={styles[\"button--number\"]} onClick={numberCallbackList[3]}>3</button>\n        <button className={styles[\"button--math-operation\"]} onClick={addPressed}>+</button>\n\n        <button className={styles[\"button--number\"]} onClick={numberCallbackList[4]}>4</button>\n        <button className={styles[\"button--number\"]} onClick={numberCallbackList[5]}>5</button>\n        <button className={styles[\"button--number\"]} onClick={numberCallbackList[6]}>6</button>\n        <button className={styles[\"button--math-operation\"]} onClick={minPressed}>-</button>\n\n        <button className={styles[\"button--number\"]} onClick={numberCallbackList[7]}>7</button>\n        <button className={styles[\"button--number\"]} onClick={numberCallbackList[8]}>8</button>\n        <button className={styles[\"button--number\"]} onClick={numberCallbackList[9]}>9</button>\n        <button className={styles[\"button--math-operation\"]} onClick={mulPressed}>x</button>\n\n        <button className={styles[\"button--operation\"]} onClick={onResetPressed}>AC</button>\n        <button className={styles[\"button--zero\"]} onClick={numberCallbackList[0]}>0</button>\n        <button className={styles[\"button--dot\"]} onClick={onDotPressed}>.</button>\n        <button className={styles[\"button--math-operation\"]} onClick={onEqualPressed}>=</button>\n    </div>\n}\nexport default React.memo(CalculatorButtonGrid)","export const OPERATION = Symbol.for(\"OPERATION\")\nexport const NUMERIC = Symbol.for(\"NUMERIC\")","import isFunction from \"lodash/isFunction\"\nimport isArray from \"lodash/isArray\"\n\nimport * as NodeTypes from \"./ExpressionNodeTypes\";\n\n\nfunction ExpressionNode (nodeValue, children) {\n    if (isFunction(nodeValue)) {\n        this.setChildren(children);\n    } \n    this.nodeValue = nodeValue;\n    this.parentNode = null;\n}\n\nExpressionNode.prototype.resolve = function() {\n    return this.isNumericNode() ? this.nodeValue : this.nodeValue(this.children);\n}\nExpressionNode.prototype.getNodeType = function(){\n    return isFunction(this.nodeValue) ? NodeTypes.OPERATION : NodeTypes.NUMERIC;\n}\nExpressionNode.prototype.isOperationNode = function(){\n    return this.getNodeType() === NodeTypes.OPERATION;\n}\nExpressionNode.prototype.isNumericNode = function(){\n    return this.getNodeType() === NodeTypes.NUMERIC;\n}\nExpressionNode.prototype.setChildren = function(children){\n    this.children = isArray(children) ? children : [children];\n}\nExpressionNode.prototype.setParentNode = function(node){\n    if (node instanceof ExpressionNode){\n        this.parentNode = node;\n    } \n}\nExpressionNode.prototype.replaceChild = function(newChild, oldChild){\n    if (newChild) {\n        var index = this.children.indexOf(oldChild);\n        this.children.splice(index, 1, newChild);\n        newChild.setParentNode(this);\n        oldChild.setParentNode(null);\n    }\n}\n\nexport default ExpressionNode;","import * as MathOperations from \"../MathOperations\"\n\nexport function isMulOrDivNode(node) {\n    return node.isOperationNode() \n        && (node.mathOperation === MathOperations.MUL  \n            || node.mathOperation === MathOperations.DIV); \n}\nexport function isAddOrMinNode(node) {\n    return node.isOperationNode() \n        && (node.mathOperation === MathOperations.ADD \n            || node.mathOperation === MathOperations.MIN); \n}\nfunction _addNodeAsChildOf(child, parent) {\n    if (parent) {\n        console.log(\"adding \", child, \" to \", parent)\n        child.setParentNode(parent);\n        let children;\n        if (parent.children) {\n            children = parent.children.concat([child])\n        } else {\n            children = [child]\n        }\n        parent.setChildren(children)\n    }\n}\nfunction getNodeRoot(node) {\n    return getFirstParentWithConditionRoot(node, function(root){\n        return root.parentNode === null;\n    });\n}\nfunction getFirstParentWithConditionRoot(node, test) {\n    let root = node;\n    if (root) {\n        if (test(root)) {\n            return root;\n        }\n        while(root.parentNode!= null) { \n            root = root.parentNode;\n            if (test(root)) {\n                return root;\n            }\n        }\n    }\n    return null;\n}\n\nfunction gestisciOperationNodeConPrecedenteOperation(operationNode, previousOperationNode){\n    var previousOperationNodeChildCount = previousOperationNode.children.length;\n    var previousOperationNodeHasChildren = previousOperationNodeChildCount > 0;\n    var aggiunto;\n    if (isAddOrMinNode(previousOperationNode)) {\n        if (isAddOrMinNode(operationNode)) {\n            _addNodeAsChildOf(operationNode, previousOperationNode);\n            aggiunto = true;\n        } else {\n            aggiunto = false;\n        }\n    } else {\n        if (isAddOrMinNode(operationNode)) {\n            _addNodeAsChildOf(operationNode, previousOperationNode);\n            aggiunto = true;\n        } else {\n            aggiunto = false;\n        }\n    }\n    return aggiunto;\n}\nfunction gestisciOperationNodeConPrecedenteNumeric(operationNode, previousNumericNode){\n    var aggiunto;\n    if (previousNumericNode.parentNode) {\n        let numericNodeParent = previousNumericNode.parentNode;\n        \n        console.log(\"handling operationNode \", operationNode, \" with previous numericNode \", previousNumericNode)\n        if (isMulOrDivNode(operationNode)){\n            console.log(\"operationNode is mul or div \")\n            if(isAddOrMinNode(numericNodeParent)){\n                console.log(\"numericNodeParent is add or min\")\n                console.log(\"replacing: \", previousNumericNode, \" of \", numericNodeParent, \" with \", operationNode)\n                numericNodeParent.replaceChild(operationNode, previousNumericNode);\n                //set numeric as child of mulOrDivNode\n                _addNodeAsChildOf(previousNumericNode, operationNode)\n            } else {\n                console.log(\"numericNodeParent is not add or min \", numericNodeParent)\n                let child = getFirstParentWithConditionRoot(previousNumericNode, function(trasversingNode){\n                    if (trasversingNode.isOperationNode()) {\n                        return (isAddOrMinNode(operationNode) && isAddOrMinNode(trasversingNode)) ||\n                            (isMulOrDivNode(operationNode) && isMulOrDivNode(trasversingNode))\n                    }\n                    return false;\n                })\n                if (child) {\n                    if (child.parentNode) {\n                        child.parentNode.replaceChild(operationNode, child);\n                    }\n                    _addNodeAsChildOf(child, operationNode);\n                } else {\n                    _addNodeAsChildOf(getNodeRoot(previousNumericNode), operationNode);\n                }\n            }\n            aggiunto = true;\n        } else {\n            console.log(\"operationNode is not mul or div \")\n            _addNodeAsChildOf(getNodeRoot(previousNumericNode), operationNode);\n            aggiunto = true;\n        }\n    } else {\n        _addNodeAsChildOf(previousNumericNode, operationNode);\n        aggiunto = true;\n    }\n    return aggiunto;\n}\nfunction gestisciNumericNodeConPrecedenteOperation(numericNode,previousOperationNode){\n    var previousOperationNodeChildCount = previousOperationNode.children.length;\n    if (previousOperationNodeChildCount === 0) {\n        _addNodeAsChildOf(numericNode, previousOperationNode)\n    } else {\n        _addNodeAsChildOf(numericNode, previousOperationNode);\n    }\n}\nfunction gestisciNumericNodeConPrecedenteNumeric(numericNode,previousNumericNode){\n    //non dovrebbe succedere\n}\nfunction ExpressionTreeCostructor() {\n    var previousNode;\n    function _addNode(currentNode) {\n        if (previousNode) {\n            if (currentNode.isOperationNode()) {\n                if (previousNode.isOperationNode()) {\n                    gestisciOperationNodeConPrecedenteOperation(currentNode, previousNode)\n                } else {\n                    gestisciOperationNodeConPrecedenteNumeric(currentNode, previousNode)\n                }\n            } else {\n                if (previousNode.isOperationNode()) {\n                    gestisciNumericNodeConPrecedenteOperation(currentNode, previousNode)\n                } else {\n                    gestisciNumericNodeConPrecedenteNumeric(currentNode, previousNode)\n                }\n            }\n            previousNode = currentNode;\n        } else {\n            previousNode = currentNode;\n        }\n    }\n    return {\n        addNode: _addNode,\n        getRoot: ()=>getNodeRoot.call(this,previousNode),\n        getLastNodeTypeDescriptor: function () {\n            if (previousNode) {\n                return {\n                    nodeType: previousNode.getNodeType(),\n                    mathOperationType: previousNode.isOperationNode() ? previousNode.mathOperation: null\n                }\n            } else {\n                return null;\n            }\n        }\n    }\n}\n\nexport default ExpressionTreeCostructor;","function History(size) {\n    const elementList = [];\n\n    function add(element) {\n        if (elementList.length === size) {\n            elementList.shift();\n        }\n        elementList.push(element);\n    }\n\n    function insert(element, index) {\n        if (index === undefined) {\n            add(element)\n        } else {\n            if (index < elementList.length) {\n                if (elementList.length === size) {\n                    elementList.shift();\n                }\n                elementList.splice(index, 0, element);\n            }\n        }\n    }\n\n    function remove(index) {\n        if (index < elementList.length) {\n            elementList.splice(index, 1);\n        }\n    }\n\n    function removeLast() {\n        const lastElementIndex = elementList.length - 1\n        elementList.splice(lastElementIndex, 1);\n    }\n\n    function getIterator() {\n        var index = null;\n        if (elementList.length === 0) {\n            return null;\n        } else {\n            const previous = function () {\n                if (index === null) {\n                    index = elementList.length -1;\n                    return elementList[index];\n                } else {\n                    if (hasPrevious()) {\n                        --index;\n                        return elementList[index];\n                    } else {\n                        return null;\n                    }\n                }\n            };\n            const hasPrevious = function () {\n                if (index === null) {\n                    return elementList.length !== 0;\n                } else {\n                    return index !== 0;\n                }\n            };\n            const next = function () {\n                if (hasNext()) {\n                    ++index;\n                    return elementList[index];\n                } else {\n                    return null;\n                }\n            };\n            const hasNext = function () {\n                if (index !== null) {\n                    return index !== elementList.length - 1;\n                } else {\n                    return false;\n                }\n            };\n            const first = function () {\n                index = 0;\n                return elementList[index];\n            };\n            const last = function () {\n                index = elementList.length - 1;\n                return elementList[index];\n            };\n            return {\n                previous,\n                hasPrevious,\n                next,\n                hasNext,\n                first,\n                last\n            }\n        }\n    }\n\n    return {\n        add,\n        insert,\n        remove,\n        removeLast,\n        getIterator\n    }\n}\n\nexport default History;","import ExpressionNode from \"./ExpressionNode\";\nimport * as MathOperations from \"../MathOperations\"\nfunction add (args) {\n\n    return args.reduce((tot, node) => tot + node.resolve(),0);\n}\nfunction multiplication (args) {\n    return args.reduce((tot, node) => tot * node.resolve(),1)\n}\nfunction min (args) {\n    let firstNode = args[0];\n    if (args.length === 1 ) {\n        return -1*firstNode.resolve();\n    } else {\n        return args.slice(1) .reduce((tot, node) => tot - node.resolve(), firstNode.resolve());\n    }\n}\nfunction division (args) {\n    let firstNode = args[0];\n    if (args.length === 1 ) {\n        return firstNode.resolve();\n    } else {\n        return args.slice(1) .reduce((tot, node) => tot / node.resolve(), firstNode.resolve());\n    }\n}\n\nfunction AddExpressionNode(children) {\n    ExpressionNode.call(this, add, children);\n}\nAddExpressionNode.prototype = Object.create(ExpressionNode.prototype)\nAddExpressionNode.prototype.mathOperation = MathOperations.ADD;\n\nfunction MinExpressionNode(children) {\n    ExpressionNode.call(this,min ,children);\n}\nMinExpressionNode.prototype = Object.create(ExpressionNode.prototype)\nMinExpressionNode.prototype.mathOperation = MathOperations.MIN;\n\nfunction MulExpressionNode(children) {\n    ExpressionNode.call(this,multiplication, children);\n}\nMulExpressionNode.prototype = Object.create(ExpressionNode.prototype)\nMulExpressionNode.prototype.mathOperation = MathOperations.MUL;\n\nfunction DivExpressionNode(children) {\n    ExpressionNode.call(this,division, children);\n}\nDivExpressionNode.prototype = Object.create(ExpressionNode.prototype)\nDivExpressionNode.prototype.mathOperation = MathOperations.DIV;\n\nAddExpressionNode.prototype.parent = \n    MinExpressionNode.prototype.parent = \n    MulExpressionNode.prototype.parent =\n    DivExpressionNode.prototype.parent = \n    ExpressionNode;\n\nexport {AddExpressionNode,MinExpressionNode,MulExpressionNode,DivExpressionNode}","import React, {useState} from \"react\";\nimport CalculatorDisplay from \"../CalculatorDisplay/CalculatorDisplay\";\nimport CalculatorButtonGrid from \"../CalculatorButtonGrid/CalculatorButtonGrid\";\nimport {ADD, DIV, MIN, MUL} from \"../MathOperations\"\nimport ExpressionNode from \"../expression-graph/ExpressionNode\";\nimport ExpressionTreeCostructor\n\tfrom \"../expression-graph/ExpressionTreeCostructor\";\nimport styles from \"./Calculator.module.scss\"\nimport History from \"../History\";\n\nimport {\n\tAddExpressionNode,\n\tDivExpressionNode,\n\tMinExpressionNode,\n\tMulExpressionNode\n} from \"../expression-graph/MathOperationNodes\";\n\nconst mathOperationToExpressionNodeMap = new Map();\n\nmathOperationToExpressionNodeMap.set(ADD, AddExpressionNode);\nmathOperationToExpressionNodeMap.set(MIN, MinExpressionNode);\nmathOperationToExpressionNodeMap.set(MUL, MulExpressionNode);\nmathOperationToExpressionNodeMap.set(DIV, DivExpressionNode);\n\nconst HISTORY_SIZE = 30;\nconst DEFAULT_DISPLAY_VALUE = \"0\";\n\nfunction Calculator() {\n\tconst [display, setDisplay] = useState(DEFAULT_DISPLAY_VALUE);\n\tconst [history, setHistory] = useState(new History(HISTORY_SIZE));\n\tconst [currentHistoryIterator, setCurrentHistoryIterator] = useState(null);\n\tconst [treeConstructor, setTreeConstructor] = useState(new ExpressionTreeCostructor());\n\tconst [isEqualJustPressed, setEqualJustPressed] = useState(false);\n\tconst [isShowingHistory, setShowingHistory] = useState(false);\n\tconst [isClean, setClean] = useState(true);\n\n\tfunction createDefaultState() {\n\t\tsetDisplay(DEFAULT_DISPLAY_VALUE);\n\t\tsetTreeConstructor(new ExpressionTreeCostructor());\n\t\tsetEqualJustPressed(false);\n\t\tsetCurrentHistoryIterator(null);\n\t\tsetShowingHistory(false);\n\t\tsetClean(true);\n\t}\n\n\tconst onNumberPressed = (num) => {\n\n\t\tconst clearField = isEqualJustPressed || isClean;\n\t\tlet displayValue;\n\t\tif (clearField) {\n\t\t\tdisplayValue = num\n\t\t} else {\n\t\t\tdisplayValue = display + \"\" + num\n\t\t}\n\n\t\tresetHistoryIterator();\n\n\t\tsetDisplay(displayValue);\n\t\tsetEqualJustPressed(false);\n\t\tsetShowingHistory(false);\n\t\tsetClean(false)\n\t};\n\tconst resetHistoryIterator = () => {\n\t\tsetCurrentHistoryIterator(null)\n\t};\n\tconst onDotPressed = () => {\n\t\tif ((\"\" + display).indexOf(\".\") === -1) {\n\t\t\tresetHistoryIterator();\n\t\t\tsetDisplay(display + \".\");\n\t\t\tsetEqualJustPressed(false);\n\t\t\tsetShowingHistory(false);\n\t\t}\n\t};\n\tconst isMinusSignTheOnlyCharVisible = () => {\n\t\tconst isMinusSignVisible = (\"\" + display).indexOf(\"-\") !== -1;\n\t\treturn isMinusSignVisible && display.length === 1;\n\t};\n\tconst onOperationPressed = (mathOperation) => {\n\t\tconst tree = treeConstructor;\n\t\ttree.getLastNodeTypeDescriptor();\n\t\tlet operationNode;\n\t\tif (isMinusSignTheOnlyCharVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isClean) {\n\t\t\tif (mathOperation === MIN) {\n\t\t\t\tsetDisplay(\"-\");\n\t\t\t\tsetTreeConstructor(tree);\n\t\t\t\tsetEqualJustPressed(false);\n\t\t\t\tsetShowingHistory(false);\n\t\t\t\tsetClean(false)\n\t\t\t}\n\t\t} else {\n\t\t\tlet expressionNodeConstructor = mathOperationToExpressionNodeMap.get(mathOperation);\n\t\t\toperationNode = new expressionNodeConstructor([]);\n\n\t\t\tconst number = Number(display);\n\t\t\ttree.addNode(new ExpressionNode(number));\n\t\t\ttree.addNode(operationNode);\n\t\t\tsetDisplay(DEFAULT_DISPLAY_VALUE);\n\t\t\tsetTreeConstructor(tree);\n\t\t\tsetEqualJustPressed(false);\n\t\t\tsetShowingHistory(false);\n\t\t\tsetClean(true);\n\t\t}\n\t};\n\tconst onEqualPressed = () => {\n\t\tconst canComputeValue = !isShowingHistory && !isEqualJustPressed && !isMinusSignTheOnlyCharVisible();\n\t\tif (canComputeValue) {\n\t\t\tconst number = Number(display);\n\t\t\ttreeConstructor.addNode(new ExpressionNode(number));\n\n\t\t\tconst computedValue = treeConstructor.getRoot().resolve();\n\t\t\thistory.add(computedValue);\n\t\t\tsetHistory(history);\n\t\t\tsetDisplay(computedValue);\n\t\t\tsetTreeConstructor(new ExpressionTreeCostructor());\n\t\t\tsetEqualJustPressed(true);\n\t\t\tsetClean(false)\n\t\t}\n\t};\n\tconst reset = () => {\n\t\tresetHistoryIterator();\n\t\tcreateDefaultState();\n\t};\n\tconst deleteLastChar = () => {\n\t\tconst displayValue = \"\" + display;\n\t\tif (displayValue !== DEFAULT_DISPLAY_VALUE) {\n\t\t\tsetDisplay(displayValue.length !== 1 ? displayValue.substr(0, displayValue.length - 1) : DEFAULT_DISPLAY_VALUE);\n\t\t\tsetClean(displayValue.length === 1)\n\t\t}\n\t};\n\tconst handleHistoryExtraction = (iterator, savedValue) => {\n\t\tif (savedValue) {\n\t\t\tconst newTree = new ExpressionNode(savedValue);\n\t\t\tsetCurrentHistoryIterator(iterator);\n\t\t\tsetTreeConstructor(new ExpressionTreeCostructor());\n\t\t\tsetDisplay(newTree.resolve());\n\t\t\tsetShowingHistory(true);\n\t\t\tsetEqualJustPressed(false);\n\t\t\tsetClean(false);\n\t\t}\n\t};\n\tconst createHistoryIterator = () => {\n\t\treturn history.getIterator();\n\t};\n\tconst onBackPressed = () => {\n\t\tlet iterator = currentHistoryIterator;\n\t\tif (!iterator) {\n\t\t\titerator = createHistoryIterator();\n\t\t}\n\t\tif (iterator && iterator.hasPrevious()) {\n\t\t\tif (isEqualJustPressed) {\n\t\t\t\titerator.last();\n\t\t\t}\n\t\t\thandleHistoryExtraction(iterator, iterator.previous());\n\t\t}\n\t};\n\tconst onForwardPressed = () => {\n\t\tlet iterator = currentHistoryIterator;\n\t\tif (!iterator) {\n\t\t\titerator = createHistoryIterator();\n\t\t}\n\t\tif (iterator && iterator.hasNext()) {\n\t\t\thandleHistoryExtraction(iterator, iterator.next());\n\t\t}\n\t};\n\n\treturn <div className={styles.container}>\n\t\t<CalculatorDisplay value={display}/>\n\t\t<CalculatorButtonGrid\n\t\t\tonNumberPressed={onNumberPressed}\n\t\t\tonOperationPressed={onOperationPressed}\n\t\t\tonEqualPressed={onEqualPressed}\n\t\t\tonDotPressed={onDotPressed}\n\t\t\tonResetPressed={reset}\n\t\t\tonDeletePressed={deleteLastChar}\n\t\t\tonBackPressed={onBackPressed}\n\t\t\tonForwardPressed={onForwardPressed}\n\t\t/>\n\t</div>\n}\n\nexport default Calculator\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Calculator from './Calculator/Calculator';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"CalculatorDisplay_display__2-fwk\"};"],"sourceRoot":""}